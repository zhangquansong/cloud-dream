spring:
  cloud:
    gateway:
      discovery:      #是否与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
        locator:      #路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问。
          enabled: true
#      routes:
#        - id: server_user_path_route
#          uri: lb://cloud-dream-server-user #http://localhost:8782
#          order: 0
#          predicates:
#            - Path=/user/**
#          filters:
#            - name: RequestRateLimiter
#              args:
#                key-resolver: '#{@hostAddrKeyResolver}'
#                redis-rate-limiter.replenishRate: 1 #允许用户每秒处理多少个请求
#                redis-rate-limiter.burstCapacity: 1 #令牌桶的容量，允许在一秒钟内完成的最大请求数
#            - RequestTime=true #开启AuthorizeGatewayFilterFactory
#        - id: server_version_path_route
#          uri: lb://cloud-dream-server-version #http://localhost:8782
#          order: 0
#          predicates:
#            - Path=/version/user/**
#          filters:
#            - StripPrefix=1
#            - name: RequestRateLimiter
#              args:
#                key-resolver: '#{@hostAddrKeyResolver}'
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 1
    config:
      uri: http://192.168.241.151:8888/
      label: master
      profile: dev
    bus:
      enabled: true
      trace:
        enabled: true
  rabbitmq:
    host: 192.168.241.153 #localhost
    port: 5672
  redis:
    host: "redis://192.168.241.152:6379" #127.0.0.1
    port: 6379
    database: 0
    cluster:
      nodes: 192.168.241.152:6379,192.168.241.152:6380,192.168.241.152:6381,192.168.241.152:6382,192.168.241.152:6383,192.168.241.152:6384
    password:
management:
  endpoints:
    web:
      exposure:
        include: bus-refresh
eureka:
  client:
    serviceUrl:
      defaultZone: http://cloud-dream-eureka-server-a:8761/eureka/,http://cloud-dream-eureka-server-b:8762/eureka/,http://cloud-dream-eureka-server-c:8763/eureka/
